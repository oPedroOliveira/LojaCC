// <auto-generated />
using LojaCCInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LojaCCInfrastructure.Migrations
{
    [DbContext(typeof(LojaCCApplicationContext))]
    [Migration("20241116154303_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LojaCCDomain.Models.Cliente", b =>
                {
                    b.Property<string>("ClienteId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("LojaCCDomain.Models.Item", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Peso")
                        .HasColumnType("longtext");

                    b.Property<float>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("LojaCCDomain.Models.ItemPedido", b =>
                {
                    b.Property<string>("ItemPedidoId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PedidoId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("float");

                    b.HasKey("ItemPedidoId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItemPedido");
                });

            modelBuilder.Entity("LojaCCDomain.Models.Pedido", b =>
                {
                    b.Property<string>("PedidoId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ClienteId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<float>("QtdTotal")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("float");

                    b.HasKey("PedidoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("LojaCCDomain.Models.ItemPedido", b =>
                {
                    b.HasOne("LojaCCDomain.Models.Item", null)
                        .WithMany("ItensPedido")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LojaCCDomain.Models.Pedido", null)
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LojaCCDomain.Models.Pedido", b =>
                {
                    b.HasOne("LojaCCDomain.Models.Cliente", null)
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LojaCCDomain.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("LojaCCDomain.Models.Item", b =>
                {
                    b.Navigation("ItensPedido");
                });

            modelBuilder.Entity("LojaCCDomain.Models.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
